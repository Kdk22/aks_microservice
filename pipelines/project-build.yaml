#Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# This YAML File is to deploy project . This is for .net application.
trigger:
- main
resources:
- repo: self
variables:
  tag: '$(Build.BuildId)'
pool:
  name: Default
stages:
- stage: Sonar_Job
  jobs:
  - job: Sonar_Job
    pool:
      name: Default  # Adjust the agent pool as needed
    steps:
    - checkout: self
      fetchDepth: 0
    - task: SonarCloudPrepare@3
      inputs:
        SonarQube: 'SonarQube Cloud'
        organization: 'utft0-key'
        scannerMode: 'dotnet'
        projectKey: 'utft0_Aks-Terra'
        projectName: 'Aks-Terra'
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'eTickets.sln'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: SonarCloudAnalyze@3
      inputs:
        jdkVersion: 'JAVA_HOME_17_X64'  # Adjust the JDK version if needed
    - task: SonarCloudAnalyze@3 
      inputs:
        pollingTimeoutSec: '300'

####################################################################################################
##############################################################################################################
- stage: Build_and_Push
  variables:
  - group: secrets
  - group: acr_variables
  jobs:
  - job: Build_and_Push_Job
    pool:
      name: Default
    steps:
    - checkout: self
    - script: |

        # Convert variables to lowercase
        repo_name=$(echo $(build.repository.name) | tr '[:upper:]' '[:lower:]')
        branch_name=$(echo $(Build.SourceBranchName) | tr '[:upper:]' '[:lower:]')
        # Authenticate with Azure CLI
        az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
        az acr login --name $(TF_VAR_PRIVATE_ACR_NAME)  # Replace with your ACR name
        # Build and push the Docker image to ACR
        docker build -t $(TF_VAR_PRIVATE_ACR_NAME).azurecr.io/${repo_name}-${branch_name}:v1 .
        docker push $(TF_VAR_PRIVATE_ACR_NAME).azurecr.io/${repo_name}-${branch_name}:v1
      displayName: 'Build and Push Docker Image'

- stage: Deploy_to_AKS
  variables:
  - group: secrets
  - group: acr_variables
  jobs:
  - deployment: Deploy_to_AKS_Job
    environment: 'AKS_Environment'
    pool:
      name: Default
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - script: |
              # Authenticate with Azure CLI
              az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
              az aks get-credentials --resource-group $(TF_VAR_RG_NAME) --name $(TF_VAR_PRIVATE_AKS_NAME) --overwrite-existing
              # Deploy to AKS
              kubectl apply -f deployment.yaml
            displayName: 'Deploy to AKS'